{"version":3,"sources":["../../src/utils/ast-healing-util.js"],"names":["healingAST","AST","options","parser","ASTParser","generator","ASTGenerator","parse","generateCode"],"mappings":"AAAA;AACA;;;;;;;AACA;;AACA;;;;AACA;;;;;;;;AAQO,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AACrC,MAAIC,MAAM,GAAG,IAAIC,kBAAJ,CAAcF,OAAd,CAAb;AACA,MAAIG,SAAS,GAAG,IAAIC,qBAAJ,CAAiBJ,OAAjB,CAAhB;AACA,SAAOC,MAAM,CAACI,KAAP,CAAaF,SAAS,CAACG,YAAV,CAAuBP,GAAvB,CAAb,CAAP;AACH","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport ASTGenerator from \"./../ASTGenerator\";\nimport ASTParser from \"./../ASTParser\";\n/**\n * healing ast with options.\n * ensure valid AST for options.\n *\n * provide `range`, `loc` etc...\n * @param AST\n * @param {ASTSourceOptions} options\n */\nexport function healingAST(AST, options) {\n    var parser = new ASTParser(options);\n    var generator = new ASTGenerator(options);\n    return parser.parse(generator.generateCode(AST));\n}\n"],"file":"ast-healing-util.js"}