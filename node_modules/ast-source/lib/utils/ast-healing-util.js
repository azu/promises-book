// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.healingAST = healingAST;

var _ASTGenerator = _interopRequireDefault(require("./../ASTGenerator"));

var _ASTParser = _interopRequireDefault(require("./../ASTParser"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * healing ast with options.
 * ensure valid AST for options.
 *
 * provide `range`, `loc` etc...
 * @param AST
 * @param {ASTSourceOptions} options
 */
function healingAST(AST, options) {
  var parser = new _ASTParser.default(options);
  var generator = new _ASTGenerator.default(options);
  return parser.parse(generator.generateCode(AST));
}
//# sourceMappingURL=ast-healing-util.js.map