{"version":3,"sources":["../../src/utils/find-parser.js"],"names":["ParserTypes","Babylon","Esprima","Unknown","isBabylon","dependecies","keys","Object","matchName","some","key","test","findParserType","options","parserType"],"mappings":"AAAA;AACA;;;;;;;;AACA;;;;AACO,IAAMA,WAAW,GAAG;AACvB;AACAC,EAAAA,OAAO,EAAE,SAFc;AAGvBC,EAAAA,OAAO,EAAE,SAHc;AAIvBC,EAAAA,OAAO,EAAE;AAJc,CAApB;;;AAOP,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC5B,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,KAAP;AACH;;AACD,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,WAAZ,CAAX;AACA,MAAIG,SAAS,GAAG,kBAAhB;AACA,SAAOF,IAAI,CAACG,IAAL,CAAU,UAASC,GAAT,EAAc;AAC3B,WAAOF,SAAS,CAACG,IAAV,CAAeD,GAAf,CAAP;AACH,GAFM,CAAP;AAGH;;AAEM,SAASE,cAAT,CAAwBC,OAAxB,EAAiC;AACpC;AACA,MAAIA,OAAO,CAACC,UAAZ,EAAwB;AACpB,WAAOD,OAAO,CAACC,UAAf;AACH,GAFD,MAEO;AACH,WAAOd,WAAW,CAACE,OAAnB;AACH;AACJ","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport ObjectAssign from \"object-assign\";\nexport const ParserTypes = {\n    // https://github.com/babel/babel/tree/master/packages/babylon aka. using by Babel\n    Babylon: \"Babylon\",\n    Esprima: \"Esprima\",\n    Unknown: \"Unknown\"\n};\n\nfunction isBabylon(dependecies) {\n    if (!dependecies) {\n        return false;\n    }\n    var keys = Object.keys(dependecies);\n    var matchName = /^babel|^babylon/i;\n    return keys.some(function(key) {\n        return matchName.test(key);\n    });\n}\n\nexport function findParserType(options) {\n    // default parser: esprima\n    if (options.parserType) {\n        return options.parserType;\n    } else {\n        return ParserTypes.Esprima;\n    }\n}\n"],"file":"find-parser.js"}