{"version":3,"sources":["../src/ast-healing-util.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;4BACY,gBAAgB;;;;yBACnB,aAAa;;;;;;;;;;;;;AAS5B,SAAS,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE;AACrC,MAAI,MAAM,GAAG,2BAAc,OAAO,CAAC,CAAC;AACpC,MAAI,SAAS,GAAG,8BAAiB,OAAO,CAAC,CAAC;AAC1C,SAAO,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;CACpD","file":"ast-healing-util.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport ASTGenerator from \"./ASTGenerator\"\nimport ASTParser from \"./ASTParser\"\n/**\n * healing ast with options.\n * ensure valid AST for options.\n *\n * provide `range`, `loc` etc...\n * @param AST\n * @param {ASTSourceOptions} options\n */\nexport function healingAST(AST, options) {\n    var parser = new ASTParser(options);\n    var generator = new ASTGenerator(options);\n    return parser.parse(generator.generateCode(AST));\n}"]}