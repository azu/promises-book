{"version":3,"sources":["../src/acorn-to-esprima.js"],"names":[],"mappings":"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","file":"acorn-to-esprima.js","sourcesContent":["// want to use https://github.com/babel/acorn-to-esprima\nvar traverse = require(\"babel-core\").traverse;\nvar tt       = require(\"babel-core\").acorn.tokTypes;\nvar t        = require(\"babel-core\").types;\n\nexports.toToken = function (token) {\n    var type = token.type;\n    token.range = [token.start, token.end];\n\n    if (type === tt.name) {\n        token.type = \"Identifier\";\n    } else if (type === tt.semi || type === tt.comma ||\n        type === tt.parenL || type === tt.parenR ||\n        type === tt.braceL || type === tt.braceR ||\n        type === tt.slash || type === tt.dot ||\n        type === tt.bracketL || type === tt.bracketR ||\n        type === tt.ellipsis || type === tt.arrow ||\n        type === tt.star || type === tt.incDec ||\n        type === tt.colon || type === tt.question ||\n        type === tt.template || type === tt.backQuote ||\n        type === tt.dollarBraceL || type === tt.at ||\n        type === tt.logicalOR || type === tt.logicalAND ||\n        type === tt.bitwiseOR || type === tt.bitwiseXOR ||\n        type === tt.bitwiseAND || type === tt.equality ||\n        type === tt.relational || type === tt.bitShift ||\n        type === tt.plusMin || type === tt.modulo ||\n        type === tt.exponent || type === tt.prefix ||\n        type === tt.doubleColon ||\n        type.isAssign) {\n        token.type = \"Punctuator\";\n        if (!token.value) token.value = type.label;\n    } else if (type === tt.jsxTagStart) {\n        token.type = \"Punctuator\";\n        token.value = \"<\";\n    } else if (type === tt.jsxTagEnd) {\n        token.type = \"Punctuator\";\n        token.value = \">\";\n    } else if (type === tt.jsxName) {\n        token.type = \"JSXIdentifier\";\n    } else if (type === tt.jsxText) {\n        token.type = \"JSXText\";\n    } else if (type.keyword === \"null\") {\n        token.type = \"Null\";\n    } else if (type.keyword === \"false\" || type.keyword === \"true\") {\n        token.type = \"Boolean\";\n    } else if (type.keyword) {\n        token.type = \"Keyword\";\n    } else if (type === tt.num) {\n        token.type = \"Numeric\";\n        token.value = String(token.value);\n    } else if (type === tt.string) {\n        token.type = \"String\";\n        token.value = JSON.stringify(token.value);\n    } else if (type === tt.regexp) {\n        token.type = \"RegularExpression\";\n        token.regex = {\n            pattern: token.value.pattern,\n            flags: token.value.flags\n        };\n        token.value = String(token.value.value);\n    }\n\n    return token;\n};\n\nexports.toAST = function (ast) {\n    ast.sourceType = \"module\";\n    ast.range = [ast.start, ast.end];\n    traverse(ast, astTransformVisitor);\n};\n\nexports.toTokens = function (tokens) {\n    // transform tokens to type \"Template\"\n    convertTemplateType(tokens);\n\n    return tokens.filter(function (token) {\n        return token.type !== \"CommentLine\" && token.type !== \"CommentBlock\";\n    }).map(exports.toToken);\n};\n\nfunction convertTemplateType(tokens) {\n    var startingToken    = 0;\n    var currentToken     = 0;\n    // track use of {}\n    var numBraces        = 0;\n    // track number of nested templates\n    var numBackQuotes     = 0;\n\n    function isBackQuote(token) {\n        return tokens[token].type === tt.backQuote;\n    }\n\n    function isTemplateStarter(token) {\n        return isBackQuote(token) ||\n                // only can be a template starter when in a template already\n            tokens[token].type === tt.braceR && numBackQuotes > 0;\n    }\n\n    function isTemplateEnder(token) {\n        return isBackQuote(token) ||\n            tokens[token].type === tt.dollarBraceL;\n    }\n\n    // append the values between start and end\n    function createTemplateValue(start, end) {\n        var value = \"\";\n        while (start <= end) {\n            if (tokens[start].value) {\n                value += tokens[start].value;\n            } else if (tokens[start].type !== tt.template) {\n                value += tokens[start].type.label;\n            }\n            start++;\n        }\n        return value;\n    }\n\n    // create Template token\n    function replaceWithTemplateType(start, end) {\n        var templateToken = {\n            type: \"Template\",\n            value: createTemplateValue(start, end),\n            start: tokens[start].start,\n            end: tokens[end].end,\n            loc: {\n                start: tokens[start].loc.start,\n                end: tokens[end].loc.end\n            }\n        };\n\n        // put new token in place of old tokens\n        tokens.splice(start, end - start + 1, templateToken);\n    }\n\n    function trackNumBraces(token) {\n        if (tokens[token].type === tt.braceL) {\n            numBraces++;\n        } else if (tokens[token].type === tt.braceR) {\n            numBraces--;\n        }\n    }\n\n    while (startingToken < tokens.length) {\n        // template start: check if ` or }\n        if (isTemplateStarter(startingToken) && numBraces === 0) {\n            if (isBackQuote(startingToken)) {\n                numBackQuotes++;\n            }\n\n            currentToken = startingToken + 1;\n\n            // check if token after template start is \"template\"\n            if (currentToken >= tokens.length - 1 || tokens[currentToken].type !== tt.template) {\n                break;\n            }\n\n            // template end: find ` or ${\n            while (!isTemplateEnder(currentToken)) {\n                if (currentToken >= tokens.length - 1) {\n                    break;\n                }\n                currentToken++;\n            }\n\n            if (isBackQuote(currentToken)) {\n                numBackQuotes--;\n            }\n            // template start and end found: create new token\n            replaceWithTemplateType(startingToken, currentToken);\n        } else if (numBackQuotes > 0) {\n            trackNumBraces(startingToken);\n        }\n        startingToken++;\n    }\n}\n\nvar astTransformVisitor = {\n    noScope: true,\n    enter: function (node) {\n        node.range = [node.start, node.end];\n\n        // private var to track original node type\n        node._babelType = node.type;\n    },\n    exit: function (node) { /* parent */\n        if (this.isSpreadProperty()) {\n            node.type = \"Property\";\n            node.kind = \"init\";\n            node.computed = true;\n            node.key = node.value = node.argument;\n            delete node.argument;\n        }\n\n        if (this.isRestElement()) {\n            return node.argument;\n        }\n\n        // flow: prevent \"no-undef\"\n        // for \"Component\" in: \"let x: React.Component\"\n        if (this.isQualifiedTypeIdentifier()) {\n            delete node.id;\n        }\n        // for \"b\" in: \"var a: { b: Foo }\"\n        if (this.isObjectTypeProperty()) {\n            delete node.key;\n        }\n        // for \"indexer\" in: \"var a: {[indexer: string]: number}\"\n        if (this.isObjectTypeIndexer()) {\n            delete node.id;\n        }\n        // for \"param\" in: \"var a: { func(param: Foo): Bar };\"\n        if (this.isFunctionTypeParam()) {\n            delete node.name;\n        }\n\n        // modules\n\n        if (this.isImportDeclaration()) {\n            delete node.isType;\n        }\n\n        if (this.isExportDeclaration()) {\n            var declar = this.get(\"declaration\");\n            if (declar.isClassExpression()) {\n                node.declaration.type = \"ClassDeclaration\";\n            } else if (declar.isFunctionExpression()) {\n                node.declaration.type = \"FunctionDeclaration\";\n            }\n        }\n\n        // classes\n\n        if (this.isReferencedIdentifier({ name: \"super\" })) {\n            return t.inherits(t.thisExpression(), node);\n        }\n\n        if (this.isClassProperty()) {\n            delete node.key;\n        }\n\n        // functions\n\n        if (this.isFunction()) {\n            if (node.async) node.generator = true;\n            delete node.async;\n        }\n\n        if (this.isAwaitExpression()) {\n            node.type = \"YieldExpression\";\n            node.delegate = node.all;\n            delete node.all;\n        }\n\n        // template strings\n\n        if (this.isTemplateLiteral()) {\n            node.quasis.forEach(function (q) {\n                q.range[0] -= 1;\n                if (q.tail) {\n                    q.range[1] += 1;\n                } else {\n                    q.range[1] += 2;\n                }\n                q.loc.start.column -= 1;\n                if (q.tail) {\n                    q.loc.end.column += 1;\n                } else {\n                    q.loc.end.column += 2;\n                }\n            });\n        }\n    }\n};\n"]}