// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.healingAST = healingAST;

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var _ASTGenerator = require("./ASTGenerator");

var _ASTGenerator2 = _interopRequireDefault(_ASTGenerator);

var _ASTParser = require("./ASTParser");

var _ASTParser2 = _interopRequireDefault(_ASTParser);

/**
 * healing ast with options.
 * ensure valid AST for options.
 *
 * provide `range`, `loc` etc...
 * @param AST
 * @param {ASTSourceOptions} options
 */

function healingAST(AST, options) {
    var parser = new _ASTParser2["default"](options);
    var generator = new _ASTGenerator2["default"](options);
    return parser.parse(generator.generateCode(AST));
}
//# sourceMappingURL=ast-healing-util.js.map
