// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseToEsprima = parseToEsprima;

var parse = require("babylon").parse;

var acornToEsprima = require("acorn-to-esprima");

function parseToEsprima(code, opts) {
  var comments = opts.onComment = [];
  var tokens = opts.onToken = [];
  var ast;

  try {
    ast = parse(code, opts);
  } catch (err) {
    throw err;
  }

  tokens.pop();

  if (opts.comment) {
    // add comments
    for (var i = 0; i < comments.length; i++) {
      var comment = comments[i];

      if (comment.type === "CommentBlock") {
        comment.type = "Block";
      } else if (comment.type === "CommentLine") {
        comment.type = "Line";
      }
    }

    ast.comments = comments;
  } // acorn to esprima


  if (opts.esprimaTokens) {
    // convert tokens
    ast.tokens = acornToEsprima.toTokens(tokens);
    acornToEsprima(ast, comments, ast.tokens); // transform esprima and acorn divergent nodes

    acornToEsprima.toAST(ast);
  }

  return ast;
}
//# sourceMappingURL=babel-parse-to-esprima.js.map