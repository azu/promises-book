{"version":3,"sources":["../src/find-parser.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;2BACgB,gBAAgB;;4BACpB,eAAe;;;;AACjC,IAAM,WAAW,GAAG;;AAEvB,aAAS,EAAE,SAAS;AACpB,aAAS,EAAE,SAAS;AACpB,aAAS,EAAE,SAAS;CACvB,CAAC;;;AAEF,SAAS,SAAS,CAAC,WAAW,EAAE;AAC5B,QAAI,CAAC,WAAW,EAAE;AACd,eAAO,KAAK,CAAC;KAChB;AACD,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpC,QAAI,SAAS,GAAG,kBAAkB,CAAC;AACnC,WAAO,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC5B,eAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9B,CAAC,CAAC;CACN;;AAEM,SAAS,cAAc,GAAG;AAC7B,QAAI,GAAG,GAAG,iBArBN,cAAc,EAqBO,MAAM,CAAC,KAAK,CAAC,CAAC;AACvC,QAAI,CAAC,GAAG,EAAE;AACN,eAAO,WAAW,CAAC,OAAO,CAAC;KAC9B;AACD,QAAI,YAAY,GAAG,+BAAa,EAAE,EAAE,GAAG,CAAC,cAAc,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACjF,QAAI,OAAO,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,OAAO,EAAE;AACT,eAAO,WAAW,CAAC,OAAO,CAAC;KAC9B;AACD,WAAO,WAAW,CAAC,OAAO,CAAC;CAC9B","file":"find-parser.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {getPackageJSON} from \"./package-util\"\nimport ObjectAssign from \"object-assign\"\nexport const ParserTypes = {\n    // https://github.com/babel/babel/tree/master/packages/babylon aka. using by Babel\n    \"Babylon\": \"Babylon\",\n    \"Esprima\": \"Esprima\",\n    \"Unknown\": \"Unknown\"\n};\n\nfunction isBabylon(dependecies) {\n    if (!dependecies) {\n        return false;\n    }\n    var keys = Object.keys(dependecies);\n    var matchName = /^babel|^babylon/i;\n    return keys.some(function (key) {\n        return matchName.test(key);\n    });\n}\n\nexport function findParserType() {\n    var pkg = getPackageJSON(module.paths);\n    if (!pkg) {\n        return ParserTypes.Unknown;\n    }\n    var dependencies = ObjectAssign({}, pkg[\"dependencies\"], pkg[\"devDependencies\"]);\n    var isBabel = isBabylon(dependencies);\n    if (isBabel) {\n        return ParserTypes.Babylon;\n    }\n    return ParserTypes.Unknown;\n}"]}