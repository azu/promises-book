// LICENSE : MIT
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.findPackageDir = findPackageDir;
exports.getPackageJSON = getPackageJSON;

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _assert = require("assert");

var _assert2 = _interopRequireDefault(_assert);

var _filepathUtil = require("./filepath-util");

var packageName = require("../package.json").name;

function findPackageDir(paths) {
    if (!paths) {
        return null;
    }
    for (var i = 0; i < paths.length; ++i) {
        var node_modulesPath = paths[i];
        if (!(0, _filepathUtil.hasExistDirectory)(node_modulesPath)) {
            continue;
        }
        var dir = _path2["default"].dirname(node_modulesPath);
        var dirName = dir.split(_path2["default"].sep).pop();
        if (dirName !== packageName) {
            return dir;
        }
    }
}

/**
 * find package.json directory and return package json.
 * You should pass `module.paths` to `paths`.
 * @param {string[]} paths the paths for look-up
 * @returns {object|null}
 */

function getPackageJSON(paths) {
    var dir = findPackageDir(paths);
    if (dir) {
        return require(_path2["default"].resolve(dir, "package.json"));
    } else {
        return null;
    }
}
//# sourceMappingURL=package-util.js.map
