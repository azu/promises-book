// LICENSE : MIT
"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var traverse_1 = __importDefault(require("@babel/traverse"));
var template_1 = __importDefault(require("@babel/template"));
function injectAssertModule(AST) {
    traverse_1.default(AST, {
        Program: {
            enter: function (path) {
                path.unshiftContainer("body", template_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["var assert = require(\"power-assert\")"], ["var assert = require(\"power-assert\")"])))());
            }
        }
    });
    return AST;
}
exports.injectAssertModule = injectAssertModule;
var templateObject_1;
//# sourceMappingURL=inject-assert.js.map