{"version":3,"sources":["../src/AsciidoctorProcessor.js"],"names":["AsciidoctorProcessor","config","ext","preProcess","text","filePath","postProcess","messages"],"mappings":"AAAA;AACA;;;;;;;;;AAEA;;;;;;;;IAEaA,oB,WAAAA,oB;AACX,gCAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;8BAMSC,G,EAAK;AACb,aAAO;AACLC,kBADK,sBACMC,IADN,EACYC,QADZ,EACsB;AACzB,iBAAO,qBAAMD,IAAN,CAAP;AACD,SAHI;AAILE,mBAJK,uBAIOC,QAJP,EAIiBF,QAJjB,EAI2B;AAC9B,iBAAO;AACLE,8BADK;AAELF,sBAAUA,WAAWA,QAAX,GAAsB;AAF3B,WAAP;AAID;AATI,OAAP;AAWD;;;0CAhB4B;AAC3B,aAAO,CAAC,OAAD,EAAU,cAAV,EAA0B,MAA1B,CAAP;AACD","file":"AsciidoctorProcessor.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n\nimport parse from \"./parse\";\n\nexport class AsciidoctorProcessor {\n  constructor(config) {\n    this.config = config;\n  }\n\n  static availableExtensions() {\n    return [\".adoc\", \".asciidoctor\", \".asc\"];\n  }\n\n  processor(ext) {\n    return {\n      preProcess(text, filePath) {\n        return parse(text);\n      },\n      postProcess(messages, filePath) {\n        return {\n          messages,\n          filePath: filePath ? filePath : \"<asciidoc>\"\n        };\n      }\n    };\n  }\n}\n"]}