"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var module_interop_1 = require("@textlint/module-interop");
var rcConfigLoader = require("rc-config-loader");
/**
 * @param {string} configFilePath
 * @param {string} configFileName
 * @param {TextLintModuleResolver} moduleResolver
 * @returns {{ config: Object, filePath:string}}
 */
function loadConfig(configFilePath, _a) {
    var configFileName = _a.configFileName, moduleResolver = _a.moduleResolver;
    // if specify Config module, use it
    if (configFilePath) {
        try {
            var modulePath = moduleResolver.resolveConfigPackageName(configFilePath);
            return {
                config: module_interop_1.moduleInterop(require(modulePath)),
                filePath: modulePath
            };
        }
        catch (error) {
            // not found config module
        }
    }
    // auto or specify path to config file
    var result = rcConfigLoader(configFileName, {
        configFileName: configFilePath,
        defaultExtension: [".json", ".js", ".yml"]
    });
    if (result === undefined) {
        return {
            config: {},
            filePath: undefined
        };
    }
    return {
        config: result.config,
        filePath: result.filePath
    };
}
exports.loadConfig = loadConfig;
//# sourceMappingURL=config-loader.js.map