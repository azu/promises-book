{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,SAAgB,SAAS,CAAC,IAAc;IACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3E,CAAC;AAFD,8BAEC;AAED;;;;;;;GAOG;AACH,SAAgB,GAAG,CAAC,GAAW,EAAE,MAAc,EAAE,GAAG,GAAG,GAAG;IACtD,IAAI,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE;QACtB,OAAO,GAAG,CAAC;KACd;IACD,IAAI,GAAG,KAAK,EAAE,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;KACnD;IACD,OAAO,GAAG,CAAC,MAAM,GAAG,MAAM,EAAE;QACxB,GAAG,IAAI,GAAG,CAAC;KACd;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAXD,kBAWC;AAED;;;;;GAKG;AACH,SAAgB,qBAAqB,CAAC,GAAW;IAC7C,IAAI,SAAS,GAAG,KAAK,CAAC;IACtB,OAAO,GAAG;SACL,KAAK,CAAC,EAAE,CAAC;SACT,GAAG,CAAC,IAAI,CAAC,EAAE;QACR,IAAI,IAAI,KAAK,GAAG,EAAE;YACd,SAAS,GAAG,IAAI,CAAC;YACjB,OAAO,EAAE,CAAC;SACb;aAAM,IAAI,SAAS,EAAE;YAClB,SAAS,GAAG,KAAK,CAAC;YAClB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC7B;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC;AAhBD,sDAgBC","sourcesContent":["/**\n * calc max length of strs.\n * @param strs\n * @returns {number}\n * @private\n */\nexport function maxLength(strs: string[]): number {\n    return strs.map(str => str.length).reduce((p, c) => Math.max(p, c), 0);\n}\n\n/**\n * padding string with pad.\n * @param str\n * @param length\n * @param pad\n * @returns {string}\n * @private\n */\nexport function pad(str: string, length: number, pad = \" \"): string {\n    if (length <= str.length) {\n        return str;\n    }\n    if (pad === \"\") {\n        throw new Error(\"pad can't to be empty string\");\n    }\n    while (str.length < length) {\n        str += pad;\n    }\n    return str;\n}\n\n/**\n * convert foo-bar to fooBar.\n * @param str\n * @returns {string}\n * @private\n */\nexport function kebabToLowerCamelCase(str: string): string {\n    let nextCamel = false;\n    return str\n        .split(\"\")\n        .map(char => {\n            if (char === \"-\") {\n                nextCamel = true;\n                return \"\";\n            } else if (nextCamel) {\n                nextCamel = false;\n                return char.toUpperCase();\n            } else {\n                return char;\n            }\n        })\n        .join(\"\");\n}\n"]}