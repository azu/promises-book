{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAKvB,kBALF,iBAAO,CAKE;AAJhB,sDAA8B;AAIZ,iBAJX,gBAAM,CAIW;AAHxB,0DAAkC;AAGR,mBAHnB,kBAAQ,CAGmB;AAFlC,iCAAwD;AAA/C,mCAAA,gBAAgB,CAAA;AAAE,8BAAA,WAAW,CAAA;AAItC;;;;GAIG;AACH,SAAgB,MAAM,CAAW,OAAe;IAC5C,OAAO,IAAI,iBAAO,CAAW,OAAO,CAAC,CAAC;AAC1C,CAAC;AAFD,wBAEC;AAED;;;;;GAKG;AACH,SAAgB,IAAI,CAAC,GAAsB,EAAE,IAAc;IACvD,OAAO,OAAO;SACT,OAAO,CAAC,IAAI,CAAC;SACb,IAAI,CAAC,GAAG,EAAE;QACP,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,sCAAsC;QACtC,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACX,CAAC;AARD,oBAQC","sourcesContent":["import Command from \"./command\";\nimport Option from \"./option\";\nimport Argument from \"./argument\";\nexport { CommandpostError, ErrorReason } from \"./error\";\n\nexport { Command, Option, Argument };\n\n/**\n * Create new top level command.\n * @param cmdName\n * @returns {Command<Opt, Arg>}\n */\nexport function create<Opt, Arg>(cmdName: string): Command<Opt, Arg> {\n    return new Command<Opt, Arg>(cmdName);\n}\n\n/**\n * exec parsing and call callback.\n * @param cmd it created by create function.\n * @param argv pass process.argv\n * @returns {Promise<{}>}\n */\nexport function exec(cmd: Command<any, any>, argv: string[]): Promise<{}> {\n    return Promise\n        .resolve(null)\n        .then(() => {\n            argv = argv.slice(2);\n            // cmd.parse throw an exception often.\n            return cmd.parse(argv);\n        });\n}\n"]}